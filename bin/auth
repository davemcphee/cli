#!/usr/bin/env bash

# Check for curl
if ! command -v curl > /dev/null
then
  error "curl command not found!"
  space "Read more on https://docs.longboat.io/cli/index.html#requirements"
  exit 1
fi

# Check for jq
if ! command -v jq > /dev/null
then
  error "jq command not found!"
  space "Read more on https://docs.longboat.io/cli/index.html#requirements"
  exit 1
fi

if [ -z "${LONGBOAT_TOKEN}" ]; then
  if [ -f "${USERCONFIG}" ]; then
    echo ""
    echo "Config file already exists in ${USERCONFIG}"
  else
    # Ask for Token
    echo "Longboat requires an API token. If you don't have one, create it"
    echo "on https://longboat.io/token/list"
    echo ""
    echo -n "Longboat API Token: "
    read -r TOKEN

    # Testing provided token against the API
    echo ""
    echo "==> Testing provided token with API request.."
    mkdir -p "${USERCONFIGDIR}"
    CURL_SILENT=true
    CURL_CONTINUE=true
    LONGBOAT_TOKEN="${TOKEN}"
    api_curl GET /doctor/user
    if [ "${CURL_CODE}" == "200" ]; then
      echo -e "==> Token belongs to: ${GREEN}${CURL_RESPONSE}${NC}"
    else
      echo "Longboat API did not respond correctly - error was:"
      echo "${CURL_RESPONSE}" | jq -r '.["errors"]'
      exit 1
    fi

    # Ensure correct directory and file permissions
    echo -e "==> Writing user config ${BLUE}${USERCONFIG}${NC}"
    touch "${USERCONFIG}"
    user_dir_perms

    # Write Longboat config file
    echo "# Longboat API Configuration" > "${USERCONFIG}"
    echo "LONGBOAT_TOKEN=\"${TOKEN}\"" >> "${USERCONFIG}"

    # Update user local files
    user_hosts_update

    echo "==> Done."
    exit 0
  fi
else
  error "LONGBOAT_TOKEN is already set."
fi

space "If you want to change your token, simply update the"
space "content of LONGBOAT_TOKEN in the file: ${USERCONFIG}"

exit 1
