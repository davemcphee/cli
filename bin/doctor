#!/usr/bin/env bash

FOUNDERROR="false"
CURL_CONTINUE="true"

headline "Software Requirements"

# Curl
if command -v curl > /dev/null
then
  ok "curl is installed"
else
  error "curl command not found!"
  space "Read more on https://docs.longboat.io/cli/index.html#requirements"
fi

# Git
if command -v git > /dev/null
then
  ok "git is installed"
else
  error "git command not found!"
  space "Read more on https://docs.longboat.io/cli/index.html#requirements"
fi

# JQ
if command -v jq > /dev/null
then
  ok "jq is installed"
else
  error "jq command not found!"
  space "Read more on https://docs.longboat.io/cli/index.html#requirements"
fi

# Ansible Playbook
if command -v ansible > /dev/null
then
  ok "ansible is installed"

  # Check ansible version
  ANSIBLE_VERSION=$(ansible --version | head -1 | awk '{print $2}')
  ANSIBLE_MIN_VERSION="2.4.0"
  if ! version_gt "${ANSIBLE_VERSION}" "${ANSIBLE_MIN_VERSION}"; then
    info "ansible v${ANSIBLE_MIN_VERSION} or greater is highly recommended, but found v${ANSIBLE_VERSION}"
    space "Ansible is not a requirement for Longboat CLI tools as such, but if"
    space "you are planning on using the Longboat roles, it should be at least v${ANSIBLE_MIN_VERSION}"
  fi
else
  info "ansible command not found!"
  space "Ansible is not a requirement for Longboat CLI tools as such, but if"
  space "you are planning on using Ansible with Longboat, it should be installed."
fi

# User configuration

headline "Longboat User"

# Check for LONGBOAT_CLI
# shellcheck disable=SC2153
if [ -z "${LONGBOAT_CLI}" ] ; then
  error "LONGBOAT_CLI is not set in your environment and some features"
  space "might not work!"
  space "How to setup CLI: https://docs.longboat.io/cli/index.html"
else
  if [ -f "${LONGBOAT_CLI}/boat" ] ; then
    ok "LONGBOAT_CLI is set to ${PURPLE}${LONGBOAT_CLI}${NC}"
  else
    error "LONGBOAT_CLI is set to ${PURPLE}${LONGBOAT_CLI}${NC}"
    space "but the file ${PURPLE}${LONGBOAT_CLI}/boat${NC} is not found!"
    space "How to setup CLI: https://docs.longboat.io/cli/index.html"
  fi
fi

if [ -f "${USERCONFIG}" ]; then

  # API Token
  if [ -z "${LONGBOAT_TOKEN}" ]; then
    error "LONGBOAT_TOKEN not found!"
    space "You might need to run 'boat auth'"
    space "Read more on https://docs.longboat.io/cli/index.html#authorization"
  fi

  # Test API User Request
  CURL_SILENT=true
  api_curl GET /doctor/user
  if [ "${CURL_CODE}" == "200" ]; then
    ok "API says you are ${PURPLE}${CURL_RESPONSE}${NC}"
  else
    error "Longboat API did not respond correctly - error was:"
    space "${CURL_RESPONSE}"
  fi
else
  error "Longboat user config not found in: ${PURPLE}${USERCONFIG}${NC}"
  space "You won't be able to authenticate with Longboat and use the CLI tools."
  space "You can register a new user at https://www.longboat.io/"
  space "or authenticate an existing with: ${PURPLE}boat auth${NC}"
  space "Read more on https://docs.longboat.io/cli/index.html#authorization"
fi

headline "Longboat Project"

# Project configuration
if [ -f ./longboat.cfg ]; then

  # API Project
  if [ -z "${LONGBOAT_PROJECT}" ]; then
    error "LONGBOAT_PROJECT not found!"
  else
    ok "Project ID: ${PURPLE}${LONGBOAT_PROJECT}${NC}"
  fi

  # Test API Project Request
  CURL_SILENT=true
  api_curl GET "/doctor/project/${LONGBOAT_PROJECT}"
  if [ "${CURL_CODE}" == "200" ]; then
    ok "API says project is: ${PURPLE}${CURL_RESPONSE}${NC}"
  else
    error "Longboat API did not respond correctly - error was:"
    space "${CURL_RESPONSE}"
  fi

else
  info "Project config not found in ./longboat.cfg - skipping"
fi

headline "The Doctor's Conclusion"

if [ "${FOUNDERROR}" == "true" ]; then
  error "Unfortunately errors was found :("
  exit 1
fi

ok "No errors :)"
echo ""
exit 0

