#!/usr/bin/env bash

if ! command -v doctl  > /dev/null
then
  error "doctl not found!"
  space "Digitalocean command line tool not installed."
  space "https://github.com/digitalocean/doctl/blob/master/README.md"
  exit 1
fi

case "${ARGUMENT}" in
"create")
  if ! DO_KEYS=$(doctl compute ssh-key list --output=json | jq .[].id | paste -sd "," -)
  then
    error "Could not get ssh keys from Digitalocean."
    exit 1
  fi

  if [ -z "${DO_KEYS}" ]
  then
    error "No ssh-keys returned from Digitalocean."
    space "Please add ssh-keys to Digitalocean: doctl compute ssh-key import"
    exit 1
  fi
  ok "Retrieved ssh-keys from Digitalocean for bootstrap: ${BLUE}${DO_KEYS}${NC}"

  CURL_SILENT="true"
  # FIXME: Running only with CURL_SILENT is a bad idea, if host create fails
  #        it doesn't show any errors - just stops! 
  # FIXME: Create host status (bootstrap, managed etc.)
  # Request Longboat: create host
  HOST_SHORT="$3"
  HOST_ENV="$4"
  api_curl POST /hosts "name=${HOST_SHORT}" "environment_name=${HOST_ENV}" "project_id=${LONGBOAT_PROJECT}"
  HOST_ID=$(echo "${CURL_RESPONSE}" | jq -r '.id')
  HOST_NAME=$(echo "${CURL_RESPONSE}" | jq -r '.fqdn')
  if [ "${HOST_NAME}" == "null" ]; then
    HOST_NAME=$(echo "${CURL_RESPONSE}" | jq -r '.name')
    if [ "${HOST_NAME}" == "null" ]; then
      error "Can't create droplet, no host name!"
      exit 1
    fi
  fi
  ok "Longboat host ${BLUE}${HOST_NAME}${NC} created"

  if DROPLET_ID=$(doctl compute droplet create "${HOST_NAME}" \
    --no-header \
    --format "ID" \
    --size "${DO_DROPLET_SIZE}" \
    --image "${DO_DROPLET_IMAGE}" \
    --region "${DO_DROPLET_REGION}" \
    --ssh-keys "${DO_KEYS}" \
    --enable-ipv6)
  then
    ok "Droplet created ID ${BLUE}${DROPLET_ID}${NC}"
  else
    error "Could not create droplet!"
    exit 1
  fi

  sleep 3

  if DROPLET_IPV4=$(doctl compute droplet get "${DROPLET_ID}" --format PublicIPv4 --no-header)
  then
    ok "Host public IPv4: ${BLUE}${DROPLET_IPV4}${NC}"
  else
    error "Could not get IPv4 address for host!"
    exit 1
  fi
  if DROPLET_IPV6=$(doctl compute droplet get "${DROPLET_ID}" --format PublicIPv6 --no-header)
  then
    ok "Host public IPv6: ${BLUE}${DROPLET_IPV6}${NC}"
  else
    error "Could not get IPv6 address for host!"
    exit 1
  fi

  # Update Longboat host (set ip and provider)
  api_curl PUT "/hosts/${HOST_ID}" "ipv4=${DROPLET_IPV4}" "ipv6=${DROPLET_IPV6}" "provider_name=digitalocean" "provider_id=${DROPLET_ID}"
  ok "Longboat host updated"

  # Get host keys 
  info "Waiting 1 min for Droplet to come online..."
  sleep 55
  KEYS=$(ssh-keyscan -T 5 "${DROPLET_IPV4}" 2> /dev/null)
  if [ -z "${KEYS}" ]; then
    info "Waiting extra 30 sec for Droplet to come online..."
    sleep 25
    KEYS=$(ssh-keyscan -T 5 "${DROPLET_IPV4}" 2> /dev/null)
    if [ -z "${KEYS}" ]; then
      info "Waiting extra 30 sec for Droplet to come online..."
      sleep 25
      KEYS=$(ssh-keyscan -T 5 "${DROPLET_IPV4}" 2> /dev/null)
      if [ -z "${KEYS}" ]; then
        info "Waiting final 30 sec for Droplet to come online..."
        sleep 25
        KEYS=$(ssh-keyscan -T 5 "${DROPLET_IPV4}" 2> /dev/null)
        if [ -z "${KEYS}" ]; then
          error "Droplet did not come online, unable to proceed."
          exit 1
        fi
      fi
    fi
  fi
  TMPFILE="/tmp/longboat.hostkeys.$$"
  echo "${KEYS}" > "${TMPFILE}"
  api_curl POST "/hosts/${HOST_ID}/keys" "hostkeys@${TMPFILE}"
  rm "${TMPFILE}"
  if [ "${CURL_CODE}" == "200" ]; then
    ok "Host keys added for ${BLUE}${HOST_NAME}${NC}"
    user_hosts_update
  else
    error "Could not set host keys - API response was:"
    echo_json "${CURL_RESPONSE}"
    exit 1
  fi

  #FIXME: Plain SSH to droplet and make sure python is installed

  #FIXME: Setting a different python interpreter might be a tricky solution - it should either be permanent or easy changeable :/

  info "Running ${BLUE}ansible-playbook ${LONGBOAT_BOOTSTRAP_PLAYBOOK}${NC} on ${BLUE}${HOST_NAME}${NC}:"

  ansible-playbook "${LONGBOAT_BOOTSTRAP_PLAYBOOK}" \
    --inventory="${HOST_ENV}" \
    --limit="${HOST_SHORT}.${HOST_ENV}" \
    --extra-vars="ansible_host=${DROPLET_IPV4}" \
    --extra-vars="ansible_user=root" \
    --extra-vars="ansible_python_interpreter=/usr/bin/python3" \
    --extra-vars="become=false"

  #FIXME: Request Longboat: update host set status :managed

  ;;

*)
  error "Unknown droplet command!"
  space "Try: boat droplet -h"
  exit 1
  ;;
esac
