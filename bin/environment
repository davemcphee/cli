#!/usr/bin/env bash

function env_sync() {
  CURL_SILENT=true
  api_curl GET /environments project_id=${LONGBOAT_PROJECT}
  if [ "${CURL_CODE}" == "200" ]; then
    echo "${CURL_RESPONSE}" | jq -r '.[]["name"]' | while read ENVNAME ; do
      echo "===> Writing environment file: ${ENVNAME} ..."
      echo "#!/usr/bin/env bash" > ${PROJECTDIR}/${ENVNAME}
      echo "source \${HOME}/.longboat/config" >> ${PROJECTDIR}/${ENVNAME}
      echo "\${LONGBOAT_PATH}/boat inventory ${ENVNAME}" >> ${PROJECTDIR}/${ENVNAME}
      chmod 755 ${PROJECTDIR}/${ENVNAME}
    done
  fi
}

case "${ARGUMENT}" in
"id")
  api_curl GET /environments/$3
  ;;

"get")
  api_curl GET /environments/name/$3 project_id=${LONGBOAT_PROJECT}
  ;;

"list")
  if [ -z ${LONGBOAT_PROJECT} ]; then
    api_curl GET /environments
  else
    api_curl GET /environments project_id=${LONGBOAT_PROJECT}
  fi
  ;;

"create")
  api_curl POST /environments name=$3 project_id=${LONGBOAT_PROJECT} $4 $5
  if [ "${CURL_CODE}" == "200" ]; then
    env_sync
  fi
  ;;

"delete")
  api_curl GET /environments/$3
  if [ "${CURL_CODE}" == "200" ]; then
    confirm_delete DELETE /environments/$3
  fi
  ;;

"sync")
  env_sync
  ;;

*)
  echo "ERROR: Unknown environment command! Try: boat env -h"
  exit 1
  ;;
esac

